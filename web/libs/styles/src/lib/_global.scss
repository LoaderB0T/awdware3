@use 'vars';

* {
  font-family: vars.$fontFamily;
}

body,
html {
  font-weight: vars.$fontWeightNormal;
  font-size: vars.$fontSizeNormal;
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
  position: relative;
  color: vars.$colorContent1;
  transition: color vars.$tranNormalLinear;

  --tooltipFontSize: 32px;
  --tooltipPadding: 10px;
}

body:has(.modal-is-open) {
  overflow: hidden;
}

:focus {
  outline-color: transparent;
  outline-style: none;
}

.window-bg {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  .window-box {
    min-width: min-content;
    width: 100%;
  }
  .window {
    @include vars.highlightable;
    overflow: auto;
  }
}

.textCursor {
  animation: blinker 1060ms step-start infinite;
  font-weight: bold;
  display: inline-block;

  @keyframes blinker {
    50% {
      opacity: 0;
    }
  }
}

a {
  text-decoration: none;
  color: vars.$colorContent1;
}

@mixin blurOver {
  position: relative;
  display: inline-block;
  text-align: center;
  @keyframes blurOver {
    0% {
      width: 0;
      left: 0;
    }
    50% {
      width: 100%;
      left: 0;
    }
    100% {
      width: 0;
      left: 100%;
    }
  }

  &::after {
    content: '';
    position: absolute;
    backdrop-filter: blur(3px);
    transform: scale(1.25);
    left: 0;
    top: 0;
    height: 100%;
    mask-image: linear-gradient(180deg, transparent 0%, black 10%, black 80%, transparent 100%),
      linear-gradient(90deg, transparent 0%, black 30%, black 90%, transparent 100%);
    mask-composite: intersect;
  }

  &:hover::after,
  &:focus-visible::after {
    animation: blurOver 0.3s ease-in-out;
  }
}

.fancy-link {
  cursor: pointer;
  text-decoration: none;
  position: relative;
  @include vars.gradient-text;
  white-space: nowrap;
  font-weight: bold;

  @include blurOver;

  &:focus-visible {
    border-bottom: 1px dotted vars.$colorContent2;
  }
}

/*
  Scrollbar styles
*/
$scrollbarBg: vars.$colorBg1;
$scrollbarThumb: vars.$colorContent2;
$scollbarThumbHover: vars.$colorContent1;
:root * {
  scrollbar-width: auto;
  scrollbar-color: $scrollbarThumb $scrollbarBg;
}
*::-webkit-scrollbar {
  width: vars.$scrollbarWidth;
  height: vars.$scrollbarWidth;
}
*::-webkit-scrollbar-track {
  background-color: $scrollbarBg;
  border-radius: vars.$radiusDefault;
  margin: 10px;
}
*::-webkit-scrollbar-thumb {
  background-color: $scrollbarThumb;
  border-radius: vars.$radiusDefault;
  border: 4px $scrollbarBg solid;
  &:hover {
    background-color: $scollbarThumbHover;
  }
}
::-webkit-scrollbar-corner {
  background: $scrollbarBg;
}

.appear {
  $animationDuration: 0.5s;
  animation: appear-blur $animationDuration cubic-bezier(0, 0, 0, 1);
  animation-delay: var(--delay, 0.5s);
  animation-fill-mode: backwards;
}

@keyframes appear-blur {
  0% {
    filter: blur(10000px);
  }
  10% {
    filter: blur(1000px);
  }
  30% {
    filter: blur(100px);
  }
  100% {
    filter: unset;
  }
}

button {
  all: unset;
  &.button {
    @include vars.gradient-bg;
    padding: 10px 15px;
    border-radius: 2px;
    color: vars.$colorBg1;
    font-weight: bold;
  }
  &.fancy-button {
    @include blurOver;
    transition: transform vars.$tranNormalLinear;
    &:hover {
      transform: scale(1.1);
    }
  }
}

hr {
  width: 100%;
  border: none;
  border-top: 1px solid vars.$colorBg3;
}

$tooltipBorderSize: 5px;
$tooltipBorder: $tooltipBorderSize vars.$colorContent1 solid;

.tooltip,
.tooltip::before,
.tooltip::after {
  position: absolute;
  background-color: vars.$colorBg1;
  font-size: var(--tooltipFontSize);
  padding: var(--tooltipPadding);
  border-top: $tooltipBorder;
  border-bottom: $tooltipBorder;
}

.tooltip {
  background-color: vars.$colorBg1;
  color: vars.$colorContent1;
  opacity: 0;
  pointer-events: none;
  user-select: none;
  transition: opacity vars.$tranNormalLinear;
  z-index: 3;
  &.visible {
    opacity: 1;
  }
  &::before,
  &::after {
    content: '!';
    color: vars.$colorBg1;
    top: -$tooltipBorderSize;
    transform: skewX(-12deg) translateZ(-1px);
    z-index: -1;
  }
  &::before {
    left: -8px;
    border-left: $tooltipBorder;
  }
  &::after {
    right: -8px;
    border-right: $tooltipBorder;
  }
}
